<?php

/**
 * @file
 * Install
 */


function github_behat_editor_install(){

    $tables = github_behat_editor_schema();
    foreach($tables as $key => $value) {
        if(!db_table_exists($key)) {
            db_create_table($key, $value);
        }
    }

    $modules = array('github_behat_editor_services');
    module_enable($modules);

    $path = file_build_uri("/behat_github/");
    if (!file_prepare_directory($path, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS)) {
        drupal_set_message(t('Folder could not be made at @folder', array('@folder' => $path)), 'error');
    } else {
        drupal_chmod($path, $mode = 0777); // in case drush makes it I want www-data to write to this
    }
}


/**
 *
 */
function github_behat_editor_schema() {

    $schema['github_behat_editor_repos'] = array(
        'description' => 'Repos for Users and Groups',
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'description' => 'ID',
                'not null' => TRUE,
            ),
            'github_id' => array(
                'type' => 'int',
                'description' => 'Github Unique ID',
                'not null' => TRUE,
            ),
            'uid' => array(
                'type' => 'int',
                'not null' => TRUE,
                'description' => 'User who made settings',
            ),
            'gid' => array(
                'type' => 'int',
                'not null' => FALSE,
                'default' => 0,
                'description' => 'Group the user made settings for',
            ),
            'repo_name' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Nice Name of the URL',
            ),
            'repo_account' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Repo Account',
            ),
            'repo_url' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Full URL',
            ),
            'branch' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Branch if needed',
            ),
            'folder' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Root folder just use / if it is that',
            ),
            'active' => array(
                'type' => 'int',
                'not null' => FALSE,
                'default' => 1,
                'description' => 'Is Active',
            ),
        ),
        'primary key' => array('id'),
    );

    $schema['github_behat_editor_commit_status'] = array(
        'description' => 'Commit Status incase GitHub is down. Storing extra info incase Repo is deleted from github_behat_editor_repos before commit',
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'description' => 'Unique ID',
                'not null' => TRUE,
            ),
            'uid' => array(
                'type' => 'int',
                'not null' => TRUE,
                'description' => 'User who made settings',
            ),
            'repo_url' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Related github repo url stored here as well',
            ),
            'branch' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Branch',
            ),
            'created' => array(
                'type' => 'int',
                'not null' => FALSE,
                'description' => 'Test created at as Unix timestamp.',
            ),
            'commit_message' => array(
                'type' => 'blob',
                'size' => 'normal',
                'description' => 'Commit Message',
                'serialize' => TRUE,
            ),
            'repo' => array(
                'type' => 'varchar',
                'length' => '255',
                'not null' => FALSE,
                'default' => NULL,
                'description' => 'Can be triggered by a repo as well',
            ),
            'commit_status' => array(
                'type' => 'int',
                'not null' => TRUE,
                'default' => 0,
                'description' => '0 = pending, 1 = commited to github',
            ),
        ),
        'primary key' => array('id'),
    );

    return $schema;
}


/**
 * Add Github ID
 */
function github_behat_editor_update_7001() {
    $fields = array('github_id');
    $schema = github_behat_editor_schema();
    $table = $schema['github_behat_editor_repos'];
    foreach($fields as $field) {
        if (!db_field_exists('github_behat_editor_repos', $field)) {
            db_add_field('github_behat_editor_repos', $field, $table['fields'][$field]);
        }
    }
}

/**
 * Setup root folder for GithubBehatEditor
 */
function github_behat_editor_update_7002() {
    $fields = array('folder');
    $schema = github_behat_editor_schema();
    $table = $schema['github_behat_editor_repos'];
    foreach($fields as $field) {
        if (!db_field_exists('github_behat_editor_repos', $field)) {
            db_add_field('github_behat_editor_repos', $field, $table['fields'][$field]);
        }
    }
}


/**
 * Setup new field repo_account
 */
function github_behat_editor_update_7003() {
    $fields = array('repo_account');
    $schema = github_behat_editor_schema();
    $table = $schema['github_behat_editor_repos'];
    foreach($fields as $field) {
        if (!db_field_exists('github_behat_editor_repos', $field)) {
            db_add_field('github_behat_editor_repos', $field, $table['fields'][$field]);
        }
    }
}